{"name": "test_06", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_common_check.TestPostMoneyboxCommon object at 0x00000238424B2790>\nauth_fixture = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI5ZjEyM2VhYS1lNWI2LTQzNzgtOTVlOC00OTc5YWIzMzkxZjkiLCJhdWQiOlsiZmFzdGFwaS11c2VyczphdXRoIl0sImV4cCI6MTc0OTk4OTcxMH0.KxtPBUoWLIMLe85hrJmUgprPPTGStYLycdi4GGcCYzI'\n\n    @allure.description('Создание новой копилки с валидными значениями (авторизованный пользователь)')\n    def test_06(self, auth_fixture):\n        test_description = 'Создание новой копилки с валидными значениями (авторизованный пользователь)'\n        expected_result = ('Копилка успешно создается, возвращается статус код 201,'\n                           'все обязательные поля присутствуют в ответе')\n        steps_log = []\n        moneybox_id = None\n        wallet_id = None\n    \n        try:\n            # Авторизация\n            steps_log.append('Авторизация пользователя')\n            access_token = auth_fixture\n    \n            # Post_moneybox запрос\n            steps_log.append('Создание копилки через POST-запрос')\n            post_result = MoneyboxMethods.create_moneybox(\n                to_date, goal, name, currency_id, amount, access_token\n            )\n    \n            moneybox_id = MoneyboxMethods.get_moneybox_id(post_result)\n            wallet_id = MoneyboxMethods.get_wallet_id(post_result)\n    \n            # Проверка статус кода\n            steps_log.append('Проверка, что статус код == 201')\n            Checking.check_statuscode(post_result, 201)\n    \n            # Проверка обязательных полей\n            steps_log.append('Проверка наличия обязательных полей в теле ответа')\n>           MoneyboxMethods.post_check_exist_req_fields(post_result, Payloads.required_fields())\n\ntest_common_check.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresult = <Response [201]>\nrequired_fields = {'data': {'goal': '1000.00', 'to_dat': '2024-12-30', 'wallet': {'amount': '0', 'currency_id': 2, 'name': 'My Goal_2'}}}\n\n    @staticmethod\n    def post_check_exist_req_fields(result, required_fields):\n        with allure.step('Проверка наличия обязательных полей'):\n            result_text = result.text\n            data = json.loads(result_text)\n    \n            for field in required_fields:\n                assert field in data, f\"Отсутствует обязательное поле: {field}\"\n                print(f'Обязательное поле {field} присутствует')\n    \n            for field in required_fields['data']:\n>               assert field in data['data'], f\"Отсутствует обязательное поле: {field}\"\nE               AssertionError: Отсутствует обязательное поле: to_dat\n\n..\\..\\methods\\moneybox_methods.py:434: AssertionError\n\nThe above exception was the direct cause of the following exception:\n\nself = <test_common_check.TestPostMoneyboxCommon object at 0x00000238424B2790>\nauth_fixture = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI5ZjEyM2VhYS1lNWI2LTQzNzgtOTVlOC00OTc5YWIzMzkxZjkiLCJhdWQiOlsiZmFzdGFwaS11c2VyczphdXRoIl0sImV4cCI6MTc0OTk4OTcxMH0.KxtPBUoWLIMLe85hrJmUgprPPTGStYLycdi4GGcCYzI'\n\n    @allure.description('Создание новой копилки с валидными значениями (авторизованный пользователь)')\n    def test_06(self, auth_fixture):\n        test_description = 'Создание новой копилки с валидными значениями (авторизованный пользователь)'\n        expected_result = ('Копилка успешно создается, возвращается статус код 201,'\n                           'все обязательные поля присутствуют в ответе')\n        steps_log = []\n        moneybox_id = None\n        wallet_id = None\n    \n        try:\n            # Авторизация\n            steps_log.append('Авторизация пользователя')\n            access_token = auth_fixture\n    \n            # Post_moneybox запрос\n            steps_log.append('Создание копилки через POST-запрос')\n            post_result = MoneyboxMethods.create_moneybox(\n                to_date, goal, name, currency_id, amount, access_token\n            )\n    \n            moneybox_id = MoneyboxMethods.get_moneybox_id(post_result)\n            wallet_id = MoneyboxMethods.get_wallet_id(post_result)\n    \n            # Проверка статус кода\n            steps_log.append('Проверка, что статус код == 201')\n            Checking.check_statuscode(post_result, 201)\n    \n            # Проверка обязательных полей\n            steps_log.append('Проверка наличия обязательных полей в теле ответа')\n            MoneyboxMethods.post_check_exist_req_fields(post_result, Payloads.required_fields())\n    \n        except AssertionError as e:\n            with allure.step(f'Ошибка проверки: {e}'):\n                detailed_log = (\n                        f\"Описание теста: {test_description}\\n\"\n                        f\"\\nВыполненные шаги до ошибки:\\n\"\n                        + \"\\n\".join(f\"- {step}\" for step in steps_log) +\n                        f\"\\n\\nОшибка:\\n{str(e)}\\n\"\n                        f\"\\nОжидаемый результат: {expected_result}\\n\\n\"\n                )\n                allure.attach(detailed_log, name=\"Подробности ошибки\", attachment_type=allure.attachment_type.TEXT)\n>               raise AssertionError from e\nE               AssertionError\n\ntest_common_check.py:206: AssertionError"}, "description": "Создание новой копилки с валидными значениями (авторизованный пользователь)", "steps": [{"name": "Создание копилки", "status": "passed", "start": 1749986110338, "stop": 1749986110357}, {"name": "Получение moneybox_id", "status": "passed", "start": 1749986110357, "stop": 1749986110357}, {"name": "Получение wallet_id", "status": "passed", "start": 1749986110357, "stop": 1749986110358}, {"name": "Проверка статус кода", "status": "passed", "start": 1749986110358, "stop": 1749986110358}, {"name": "Проверка наличия обязательных полей", "status": "failed", "statusDetails": {"message": "AssertionError: Отсутствует обязательное поле: to_dat\n", "trace": "  File \"C:\\Users\\Pavel\\PycharmProjects\\Budget_api\\Moneybox\\methods\\moneybox_methods.py\", line 434, in post_check_exist_req_fields\n    assert field in data['data'], f\"Отсутствует обязательное поле: {field}\"\n           ^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1749986110358, "stop": 1749986110358}, {"name": "Ошибка проверки: Отсутствует обязательное поле: to_dat", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"C:\\Users\\Pavel\\PycharmProjects\\Budget_api\\Moneybox\\tests\\Post_moneybox\\test_common_check.py\", line 206, in test_06\n    raise AssertionError from e\n"}, "attachments": [{"name": "Подробности ошибки", "source": "29b1064c-08ad-41bf-b51b-5db24f670567-attachment.txt", "type": "text/plain"}], "start": 1749986110358, "stop": 1749986110358}, {"name": "Удаление копилки", "status": "passed", "steps": [{"name": "Удаление копилки из базы данных", "status": "passed", "start": 1749986110359, "stop": 1749986110531}], "start": 1749986110359, "stop": 1749986110531}], "attachments": [{"name": "stdout", "source": "f17af450-99c4-4cb4-8126-4a8734568032-attachment.txt", "type": "text/plain"}], "start": 1749986110338, "stop": 1749986110532, "uuid": "dfb03888-b540-4089-b4d5-39a59cfe7b6a", "historyId": "1f00b38537017627c65490c3d9f14285", "testCaseId": "1f00b38537017627c65490c3d9f14285", "fullName": "Moneybox.tests.Post_moneybox.test_common_check.TestPostMoneyboxCommon#test_06", "labels": [{"name": "epic", "value": "Post_moneybox /api/v1/moneybox/ Создание копилок общие проверки"}, {"name": "tag", "value": "post_moneybox"}, {"name": "parentSuite", "value": "Moneybox.tests.Post_moneybox"}, {"name": "suite", "value": "test_common_check"}, {"name": "subSuite", "value": "TestPostMoneyboxCommon"}, {"name": "host", "value": "DESKTOP-M2C3408"}, {"name": "thread", "value": "15564-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Moneybox.tests.Post_moneybox.test_common_check"}]}