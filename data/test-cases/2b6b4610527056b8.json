{
  "uid" : "2b6b4610527056b8",
  "name" : "test_01",
  "fullName" : "Session.tests.Post_logout_all.test_logout_all.TestLogoutAll#test_01",
  "historyId" : "bf2e33288f74ccdeab75eb1f47b8e781",
  "time" : {
    "start" : 1740069377374,
    "stop" : 1740069381449,
    "duration" : 4075
  },
  "description" : "Отзыв всех refresh_token, кроме переданного устройства(валидные данные)",
  "descriptionHtml" : "<p>Отзыв всех refresh_token, кроме переданного устройства(валидные данные)</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Ошибка {\"errors\":{\"status\":403,\"detail\":\"The device does not exist or is occupied by another user\"}}",
  "statusTrace" : "self = <test_logout_all.TestLogoutAll object at 0x7fea680dc950>\nauth_fixture = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI5YzA1ZGUwNC03MDU5LTQ5YmMtOWJmOC1mY2M4Njk4MzUyNDUiLCJhdWQiOlsiZmFzdGFwaS11c2VyczphdXRoIl0sImV4cCI6MTc0MDA3Mjk3N30.mE_Cm_mvvWBsRl115zbV4QHSLW-bnSe8CONs6KADezY'\n\n    @allure.description('Отзыв всех refresh_token, кроме переданного устройства(валидные данные)')\n    def test_01(self, auth_fixture):\n        \"\"\"Авторизация\"\"\"\n        access_token = auth_fixture\n        result_auth_1 = Auth.auth_with_params(\n            '22222',\n            'username=y.pawel_test1%40mail.ru&password=Ohranatruda%401'\n        )\n        Checking.check_statuscode(result_auth_1, 200)\n        result_auth_2 = Auth.auth_with_params(\n            '33333',\n            'username=y.pawel_test1%40mail.ru&password=Ohranatruda%401'\n        )\n        Checking.check_statuscode(result_auth_2, 200)\n    \n        \"\"\"Запрос на отзыв refresh token\"\"\"\n        result = SessionsMethods.logout_all('11111', access_token)\n    \n        \"\"\"Проверка статус кода\"\"\"\n>       Checking.check_statuscode(result, 204)\n\nSession/tests/Post_logout_all/test_logout_all.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [403]>, status_code = 204\n\n    @staticmethod\n    def check_statuscode(result, status_code):\n        with allure.step('Проверка статус кода'):\n>           assert result.status_code == status_code, f\"Ошибка {result.text}\"\nE           AssertionError: Ошибка {\"errors\":{\"status\":403,\"detail\":\"The device does not exist or is occupied by another user\"}}\n\ncommon_methods/checking.py:13: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "auth_fixture",
    "time" : {
      "start" : 1740069375377,
      "stop" : 1740069377374,
      "duration" : 1997
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Авторизация",
      "time" : {
        "start" : 1740069375377,
        "stop" : 1740069377373,
        "duration" : 1996
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Проверка статус кода",
      "time" : {
        "start" : 1740069377373,
        "stop" : 1740069377373,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 2,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "Отзыв всех refresh_token, кроме переданного устройства(валидные данные)",
    "status" : "failed",
    "statusMessage" : "AssertionError: Ошибка {\"errors\":{\"status\":403,\"detail\":\"The device does not exist or is occupied by another user\"}}",
    "statusTrace" : "self = <test_logout_all.TestLogoutAll object at 0x7fea680dc950>\nauth_fixture = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI5YzA1ZGUwNC03MDU5LTQ5YmMtOWJmOC1mY2M4Njk4MzUyNDUiLCJhdWQiOlsiZmFzdGFwaS11c2VyczphdXRoIl0sImV4cCI6MTc0MDA3Mjk3N30.mE_Cm_mvvWBsRl115zbV4QHSLW-bnSe8CONs6KADezY'\n\n    @allure.description('Отзыв всех refresh_token, кроме переданного устройства(валидные данные)')\n    def test_01(self, auth_fixture):\n        \"\"\"Авторизация\"\"\"\n        access_token = auth_fixture\n        result_auth_1 = Auth.auth_with_params(\n            '22222',\n            'username=y.pawel_test1%40mail.ru&password=Ohranatruda%401'\n        )\n        Checking.check_statuscode(result_auth_1, 200)\n        result_auth_2 = Auth.auth_with_params(\n            '33333',\n            'username=y.pawel_test1%40mail.ru&password=Ohranatruda%401'\n        )\n        Checking.check_statuscode(result_auth_2, 200)\n    \n        \"\"\"Запрос на отзыв refresh token\"\"\"\n        result = SessionsMethods.logout_all('11111', access_token)\n    \n        \"\"\"Проверка статус кода\"\"\"\n>       Checking.check_statuscode(result, 204)\n\nSession/tests/Post_logout_all/test_logout_all.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [403]>, status_code = 204\n\n    @staticmethod\n    def check_statuscode(result, status_code):\n        with allure.step('Проверка статус кода'):\n>           assert result.status_code == status_code, f\"Ошибка {result.text}\"\nE           AssertionError: Ошибка {\"errors\":{\"status\":403,\"detail\":\"The device does not exist or is occupied by another user\"}}\n\ncommon_methods/checking.py:13: AssertionError",
    "steps" : [ {
      "name" : "Авторизация с выбором устройства и пользователя",
      "time" : {
        "start" : 1740069377374,
        "stop" : 1740069379473,
        "duration" : 2099
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Проверка статус кода",
      "time" : {
        "start" : 1740069379473,
        "stop" : 1740069379473,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Авторизация с выбором устройства и пользователя",
      "time" : {
        "start" : 1740069379473,
        "stop" : 1740069381026,
        "duration" : 1553
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Проверка статус кода",
      "time" : {
        "start" : 1740069381026,
        "stop" : 1740069381026,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Отзыв всех refresh token текущего пользователя, кроме переданного устройства.",
      "time" : {
        "start" : 1740069381026,
        "stop" : 1740069381448,
        "duration" : 422
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Проверка статус кода",
      "time" : {
        "start" : 1740069381448,
        "stop" : 1740069381448,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Ошибка {\"errors\":{\"status\":403,\"detail\":\"The device does not exist or is occupied by another user\"}}\n",
      "statusTrace" : "  File \"/Budget_api/common_methods/checking.py\", line 13, in check_statuscode\n    assert result.status_code == status_code, f\"Ошибка {result.text}\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "f384f6fa1e7d92af",
      "name" : "stdout",
      "source" : "f384f6fa1e7d92af.txt",
      "type" : "text/plain",
      "size" : 1662
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 6,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "Session"
  }, {
    "name" : "parentSuite",
    "value" : "Session.tests.Post_logout_all"
  }, {
    "name" : "suite",
    "value" : "test_logout_all"
  }, {
    "name" : "subSuite",
    "value" : "TestLogoutAll"
  }, {
    "name" : "host",
    "value" : "d7de93ca18d9"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Session.tests.Post_logout_all.test_logout_all"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "Session" ]
  },
  "source" : "2b6b4610527056b8.json",
  "parameterValues" : [ ]
}